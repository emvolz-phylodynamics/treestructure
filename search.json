[{"path":"https://emvolz-phylodynamics.github.io/treestructure/articles/supportValues.html","id":"introductions","dir":"Articles","previous_headings":"","what":"Introductions","title":"Node support values using treestructure","text":"tutorial uses public data available Ebola demonstrate use node support values (e.g. bootstrap posterior probability) avoid designating population structure badly supported clades. use time-scaled phylogenetic tree estimated BEAST. First, need load R package use tutorial. Now, load time-scaled phylogenetic tree posterior probability support values: need convert tree phylo object add posterior probability information Bayesian tree phylo object tree. use ape:read.nexus read tree estimated BEAST, won’t get posterior probability associated clades. now convert dated tree phylo object. Now add posterior probability BEAST tree dated_tree object.","code":"library(stringr) library(treeio) library(treestructure) #get the dated tree beast_tree <- read.beast(system.file('Makona_1610_cds_ig.GLM.MCC.tree',                                      package='treestructure') ) dated_tre <- as.phylo(beast_tree) # Get number of tips n_tips <- length(dated_tre$tip.label)  # Get BEAST tree as tibble (it will include node numbers and posterior probabilities) tree_data <- as_tibble(beast_tree)  #get posterior probability posterior <- as.numeric(tree_data$posterior[(n_tips + 1):nrow(tree_data)])  #add the posterior probability information to the `phylo` object dated_tre$node.label <- posterior"},{"path":"https://emvolz-phylodynamics.github.io/treestructure/articles/supportValues.html","id":"assign-clusters-without-using-node-support","dir":"Articles","previous_headings":"Introductions","what":"Assign clusters without using node support","title":"Node support values using treestructure","text":"Firstly, assign clusters without using node support values. Note parameter nodeSupportValues set FALSE. treestructure take several minutes run, can load results:  treestructure analyses resulted 23 clusters.","code":"trestruct_res_nobt <- trestruct(dated_tre,                                  minCladeSize = 30,                                  nodeSupportValues = FALSE,                                  level = 0.01) trestruct_res_nobt <- readRDS( system.file('trestruct_res_nobt.rds',                                            package='treestructure') )  plot(trestruct_res_nobt, use_ggtree = T) + ggtree::geom_tippoint()"},{"path":"https://emvolz-phylodynamics.github.io/treestructure/articles/supportValues.html","id":"assign-clusters-using-branch-support","dir":"Articles","previous_headings":"Introductions","what":"Assign clusters using branch support","title":"Node support values using treestructure","text":"Now, assign clusters using information branch support. analyzing dated tree estimated BEAST, branch support posterior probability. designate clusters least 0.95 posterior probability. achieved setting 95 parameter nodeSupportThreshold trestruct function. Note now parameter nodeSupportValues set TRUE, tells algorithm node support values provided phylo object node.label. can also provide nodeSupportValues vector length equal number internal nodes tree. take minute run treestructure, can load result instead.  Now 6 well-supported clusters differences coalescent patterns. Note might change use higher lower value nodeSupportThreshold trestruct function.","code":"trestruct_res <- trestruct(dated_tre,                             minCladeSize = 30,                             nodeSupportValues = TRUE,                             nodeSupportThreshold = 95,                             level = 0.01) trestruct_res <- readRDS( system.file('trestruct_res.rds',                                       package='treestructure') )  plot(trestruct_res, use_ggtree = T) + ggtree::geom_tippoint()"},{"path":"https://emvolz-phylodynamics.github.io/treestructure/articles/supportValues.html","id":"using-the-ch-index","dir":"Articles","previous_headings":"Introductions","what":"Using the CH-index","title":"Node support values using treestructure","text":"CH-index compare different values parameter levels treestructure algorithm. need specify level = NULL specify lower upper bound optimize parameter level. Note also take consideration use branch support. also take minute run treestructure, can load result instead.  Now 2 well-supported clusters differences coalescent patterns optimizing significance level. example, instead using level = 0.01 (default ), optimization level using CH-index identified level 0.00073.","code":"trestruct_chindex <- trestruct(dated_tre,                                minCladeSize = 30,                                 nodeSupportValues = TRUE,                                 nodeSupportThreshold = 95,                                level = NULL,                                levellb = 0.0001,                                 levelub = 0.001) trestruct_chindex <- readRDS( system.file('trestruct_chindex.rds',                                       package='treestructure') )  plot(trestruct_chindex, use_ggtree = T) + ggtree::geom_tippoint()"},{"path":"https://emvolz-phylodynamics.github.io/treestructure/articles/supportValues.html","id":"final-considerations","dir":"Articles","previous_headings":"Introductions > Using the CH-index","what":"Final considerations","title":"Node support values using treestructure","text":"function trestruct parameter named nsim refers number simulations computing null distribution test statistics (Volz et al. 2020). nsim parameter trestruct function set default value 10,000, good value level parameter set 0.01 (default value). decreasing value level parameter, value nsim increased. example using CH-index, algorithm identified significance level 0.00073. However, analyses carried using default nsim 10,000 simulations. future plans automatically detect adequate number simulations (nsim value) given sizes clades compared threshold p-value used test. treestructure implemented moment, run sensitive analyses dataset, use significance level smaller 0.01. example, use significance level 0.001 nsim > 10,000, can run analysis twice compare results obtained runs, similar. results different, increase value nsim.","code":""},{"path":[]},{"path":"https://emvolz-phylodynamics.github.io/treestructure/articles/treestructure.html","id":"structured-coalescent-simulation","dir":"Articles","previous_headings":"","what":"Structured coalescent simulation","title":"treestructure applied to structured coalescent simulation","text":"example shows function trestruct applied simulated structured coalescent tree includes samples large constant size population samples three small ‘outbreaks’ growing exponentially. simulations generated phydynR package. Load tree: Note tip labels corresponds deme sample. ‘1’ constant size reservoir, ‘0’ exponentially growing deme. run treestructure algorithm default setting: can print results:","code":"library(treestructure) ( tree <- ape::read.tree( system.file('sim.nwk', package = 'treestructure') ) )  #>  #> Phylogenetic tree with 275 tips and 274 internal nodes. #>  #> Tip labels: #>   1, 1, 1, 1, 1, 1, ... #>  #> Rooted; includes branch length(s). s <- trestruct( tree )  #> Tree has NA or duplicated tip labels. Adding a unique id. #> Finding splits under nodes: 276  #> Finding splits under nodes: 276 526  #> Finding splits under nodes: 276 421  #> Finding splits under nodes: 276 473 print(s)  #> Call:  #> .trestruct(tre = tre, minCladeSize = minCladeSize, minOverlap = minOverlap,  #>     nodeSupportValues = nodeSupportValues, nodeSupportThreshold = nodeSupportThreshold,  #>     nsim = nsim, level = level[1], ncpu = ncpu, verbosity = verbosity,  #>     debugLevel = debugLevel, useNodeSupport = useNodeSupport,  #>     tredat = tredat) #>  #> Significance level: 0.01  #> Number of clusters: 4  #> Number of partitions: 2  #> Number of taxa in each cluster: #>  #>   1   2   3   4  #>  25  25 200  25  #> Number of taxa in each partition: #>  #>   1   2  #>  75 200  #> ... #> For complete data, use `as.data.frame(...)`"},{"path":"https://emvolz-phylodynamics.github.io/treestructure/articles/treestructure.html","id":"plotting-results","dir":"Articles","previous_headings":"Structured coalescent simulation","what":"Plotting results","title":"treestructure applied to structured coalescent simulation","text":"default plotting behavior uses ggtree package available.  , desired, ape plots available  subsequent analysis, may want turn treestructure result dataframe: cluster partition assignment stored factor. use split get data frame partition. Suppose want tree corresponding partition 1:","code":"plot(s)  + ggtree::geom_tiplab() plot( s, use_ggtree = FALSE ) structureData <- as.data.frame( s )  head( structureData ) #>   taxon cluster partition #> 1   1_1       3         2 #> 2   2_1       3         2 #> 3   3_1       3         2 #> 4   4_1       3         2 #> 5   5_1       3         2 #> 6   6_1       3         2 with ( structureData,         ape::keep.tip(s$tree, taxon[ partition==1 ] )         ) -> partition1 partition1 #>  #> Phylogenetic tree with 75 tips and 74 internal nodes. #>  #> Tip labels: #>   143_0, 144_0, 145_0, 146_0, 147_0, 148_0, ... #>  #> Rooted; includes branch length(s). plot(partition1)"},{"path":"https://emvolz-phylodynamics.github.io/treestructure/articles/treestructure.html","id":"parameter-choice-and-number-of-clusters","dir":"Articles","previous_headings":"Structured coalescent simulation","what":"Parameter choice and number of clusters","title":"treestructure applied to structured coalescent simulation","text":"Two parameters large influence results: level significance level subdividing clade new cluster. detect clusters, increase p, note also increase false positive rate. minCladeSize controls smallest allowed cluster size terms number tips. smaller value, smaller clusters may detected, computation time increase. Example: practice, clustering thresholds always subjective best value level parameter depend application. One way choose appropriate level use additional data associated sample. can select level gives set clusters explains variance data interest (e.g. use cluster factor ANOVA).","code":"trestruct( tree, level = .05, minCladeSize = 5 ) #> Tree has NA or duplicated tip labels. Adding a unique id. #> Finding splits under nodes: 276  #> Finding splits under nodes: 276 526  #> Finding splits under nodes: 276 421  #> Finding splits under nodes: 276 473  #> Finding splits under nodes: 276 359  #> Finding splits under nodes: 276 277 #> Call:  #> .trestruct(tre = tre, minCladeSize = minCladeSize, minOverlap = minOverlap,  #>     nodeSupportValues = nodeSupportValues, nodeSupportThreshold = nodeSupportThreshold,  #>     nsim = nsim, level = level[1], ncpu = ncpu, verbosity = verbosity,  #>     debugLevel = debugLevel, useNodeSupport = useNodeSupport,  #>     tredat = tredat) #>  #> Significance level: 0.05  #> Number of clusters: 6  #> Number of partitions: 2  #> Number of taxa in each cluster: #>  #>   1   2   3   4   5   6  #>  25  25  25   6  29 165  #> Number of taxa in each partition: #>  #>   1   2  #>  75 200  #> ... #> For complete data, use `as.data.frame(...)`"},{"path":"https://emvolz-phylodynamics.github.io/treestructure/articles/treestructure.html","id":"ch-index","dir":"Articles","previous_headings":"Structured coalescent simulation > Parameter choice and number of clusters","what":"CH index","title":"treestructure applied to structured coalescent simulation","text":"Alternatively, absence additional data, treestructure package supports using CH index compare different levels. statistic based ratio -cluster within-cluster variance time node (distance root) returns level ratio maximized. wish use CH index, pass level = NULL trestruct, read documentation levellb, levelub, res parameters.","code":""},{"path":"https://emvolz-phylodynamics.github.io/treestructure/articles/updating_treestructure.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Update of a treestructure object with new sequences","text":"tutorial, exemplify update previous treestructure object new sequences using sampled version Ebola dated tree, publicly available. First, load R packages use tutorial. Now can read -sampled time-tree Ebola. pruned tree, 1,310 tips.","code":"library(treestructure) library(phangorn) pruned_tree <- readRDS( system.file('Ebola_down_sampled_tree.rds',                                     package='treestructure') )"},{"path":"https://emvolz-phylodynamics.github.io/treestructure/articles/updating_treestructure.html","id":"assign-clusters-using-node-support","dir":"Articles","previous_headings":"Introduction","what":"Assign clusters using node support","title":"Update of a treestructure object with new sequences","text":"Now assign clusters using posterior probability node support Ebola -sampled phylogenetic tree: treestructure take several minutes run, can load results:  treestructure analyses resulted 4 clusters.","code":"trestruct_res <- trestruct(pruned_tree,                             minCladeSize = 30,                             nodeSupportValues = TRUE,                             nodeSupportThreshold = 95,                            level = 0.01) trestruct_res <- readRDS( system.file('downsampled_tree_struc.rds',                                       package='treestructure') )  plot(trestruct_res, use_ggtree = T) + ggtree::geom_tippoint()"},{"path":"https://emvolz-phylodynamics.github.io/treestructure/articles/updating_treestructure.html","id":"update-a-previous-treestrucuture-object-with-new-sequences","dir":"Articles","previous_headings":"Introduction","what":"Update a previous treestrucuture object with new sequences","title":"Update of a treestructure object with new sequences","text":"update previous treestructure object new sequences, now use maximum likelihood Ebola tree. Note new tree must rooted, need time-scaled binary. without need re-estimate timetree re-run trestruct scratch, now able add new sequences existing treestructure object:  like compare sequence names comprise cluster tree, can : Note length tree1_cluster1 tree2_cluster1 different. added tips ML tree, ml_rooted_tree, treestructure object, trestruct_res. can also see elements tree1_cluster1 contained tree2_cluster1","code":"#Note that this tree has more sequences than the previous tree used in this #tutorial. new_tree <- read.nexus( system.file('Makona_1610_genomes_2016-06-23.ml.tree',                                      package='treestructure') )  #now we can root the tree using mid-point rooting for illustration ml_rooted_tree <- midpoint(new_tree)  #now we need to remove the quotes from the tip names (to avoid an error with  #treestructure function) ml_rooted_tree$tip.label <- unlist(lapply(ml_rooted_tree$tip.label,                                            function (x) gsub(\"'\", \"\", x))) trestruct_add_tips <- addtips(trst = trestruct_res, tre = ml_rooted_tree)  plot(trestruct_add_tips, use_ggtree = T) + ggtree::geom_tippoint() #compare sequences in cluster 1 from trestruct_res object and the  #trestruct_add_tips object  tree1_cluster1 <- trestruct_res$clusterSets$`1` tree2_cluster1 <- trestruct_add_tips$clusterSets$`1`  length(tree1_cluster1) #> [1] 30 length(tree2_cluster1) #> [1] 41 sum(tree1_cluster1 %in% tree2_cluster1) #> [1] 30"},{"path":"https://emvolz-phylodynamics.github.io/treestructure/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Erik Volz. Author, maintainer. Fabricia F. Nascimento. Contributor. Vinicius B. Franceschi. Contributor.","code":""},{"path":"https://emvolz-phylodynamics.github.io/treestructure/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Volz E (2025). treestructure: Detect Population Structure Within Phylogenetic Trees. R package version 0.6.0, https://github.com/emvolz-phylodynamics/treestructure, https://emvolz-phylodynamics.github.io/treestructure/, http://emvolz-phylodynamics.github.io/treestructure/.","code":"@Manual{,   title = {treestructure: Detect Population Structure Within Phylogenetic Trees},   author = {Erik Volz},   year = {2025},   note = {R package version 0.6.0, https://github.com/emvolz-phylodynamics/treestructure, https://emvolz-phylodynamics.github.io/treestructure/},   url = {http://emvolz-phylodynamics.github.io/treestructure/}, }"},{"path":"https://emvolz-phylodynamics.github.io/treestructure/index.html","id":"treestructure","dir":"","previous_headings":"","what":"Detect Population Structure Within Phylogenetic Trees","title":"Detect Population Structure Within Phylogenetic Trees","text":"R package treestructure contains function detect population structure history coalescent events recorded phylogenetic trees. method classifies tip internal node tree disjoint sets characterized similar coalescent patterns. also possible use node support values (.e. bootstrap values) avoid designating population structure badly supported clades.","code":""},{"path":"https://emvolz-phylodynamics.github.io/treestructure/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Detect Population Structure Within Phylogenetic Trees","text":"Alternatively, can download repository follow instructions OS installing packages source. also provide command-line interface treestructure. See inst/tscl. like use command-line interface need install R package getopt. can use flag -h use treestructure command-line interface direct terminal.","code":"# You will need to install the R package devtools  # (https://github.com/r-lib/devtools)  install.packages(\"devtools\") devtools::install_github(\"emvolz-phylodynamics/treestructure\")"},{"path":"https://emvolz-phylodynamics.github.io/treestructure/index.html","id":"tutorials","dir":"","previous_headings":"","what":"Tutorials","title":"Detect Population Structure Within Phylogenetic Trees","text":"recommend read Get started understand basic functions treestructure. additional tutorial include branch support avoid designating population structure badly supported clades, see example Ebola.","code":""},{"path":"https://emvolz-phylodynamics.github.io/treestructure/index.html","id":"author","dir":"","previous_headings":"","what":"Author","title":"Detect Population Structure Within Phylogenetic Trees","text":"treestructure developed Erik Volz.","code":""},{"path":"https://emvolz-phylodynamics.github.io/treestructure/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Detect Population Structure Within Phylogenetic Trees","text":"Erik Volz, Wiuf Carsten, Yonatan Grad, Simon Frost, Ann Dennis, Xavier Didelot, (2020); Identification hidden population structure time-scaled phylogenies; Systematic Biology, 69: 884–896.","code":""},{"path":"https://emvolz-phylodynamics.github.io/treestructure/reference/addtips.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare and add tips into new treestructure object — addtips","title":"Compare and add tips into new treestructure object — addtips","text":"Compares new input tree old treestructure fit merges tips new treestructure object. Tips new tree new treestructure merged. Merging carried based phylogenetic criterion. new tips added cluster shares MRCA (recent common ancestor).","code":""},{"path":"https://emvolz-phylodynamics.github.io/treestructure/reference/addtips.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare and add tips into new treestructure object — addtips","text":"","code":"addtips(trst, tre)"},{"path":"https://emvolz-phylodynamics.github.io/treestructure/reference/addtips.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare and add tips into new treestructure object — addtips","text":"trst Original treestructure fit updated. tre new tree (ape::phylo) may contain samples trst. tree must rooted, need time-scaled binary.","code":""},{"path":"https://emvolz-phylodynamics.github.io/treestructure/reference/addtips.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare and add tips into new treestructure object — addtips","text":"new treestructure fit.","code":""},{"path":"https://emvolz-phylodynamics.github.io/treestructure/reference/addtips.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compare and add tips into new treestructure object — addtips","text":"Erik Volz","code":""},{"path":"https://emvolz-phylodynamics.github.io/treestructure/reference/addtips.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare and add tips into new treestructure object — addtips","text":"","code":"set.seed(072023) # simulate two trees and bind them to simulate structure tr1 <- ape::rcoal( 50 ) tr2 <- ape::rcoal( 100 ) tr1$tip.label <- gsub(tr1$tip.label, patt = 't', rep = 's') tr1$edge.length <- tr1$edge.length*.5 tr1$root.edge <- 1 tr2$root.edge <- 1 tr <- ape::bind.tree(tr1, tr2, position = .5 ) |> ape::multi2di()  # subsample the tree to simulating missing tips and estimate structure ex <- sample( tr$tip.label, size = 30, replace = FALSE) tr0 <- ape::drop.tip( tr, ex ) (s0 <- treestructure::trestruct( tr0 )) #> Finding splits under nodes: 121  #> Finding splits under nodes: 121 163  #> Call:  #> .trestruct(tre = tre, minCladeSize = minCladeSize, minOverlap = minOverlap,  #>     nodeSupportValues = nodeSupportValues, nodeSupportThreshold = nodeSupportThreshold,  #>     nsim = nsim, level = level[1], ncpu = ncpu, verbosity = verbosity,  #>     debugLevel = debugLevel, useNodeSupport = useNodeSupport,  #>     tredat = tredat) #>  #> Significance level: 0.01  #> Number of clusters: 2  #> Number of partitions: 2  #> Number of taxa in each cluster: #>  #>  1  2  #> 42 78  #> Number of taxa in each partition: #>  #>  1  2  #> 42 78  #> ... #> For complete data, use `as.data.frame(...)`   # assign structure to the previously missing tips (s <- treestructure::addtips( s0, tr )) #> Call:  #> .trestruct(tre = tre, minCladeSize = minCladeSize, minOverlap = minOverlap,  #>     nodeSupportValues = nodeSupportValues, nodeSupportThreshold = nodeSupportThreshold,  #>     nsim = nsim, level = level[1], ncpu = ncpu, verbosity = verbosity,  #>     debugLevel = debugLevel, useNodeSupport = useNodeSupport,  #>     tredat = tredat) #>  #> Significance level: 0.01  #> Number of clusters: 2  #> Number of partitions: 2  #> Number of taxa in each cluster: #>  #>   1   2  #>  50 100  #> Number of taxa in each partition: #>  #>   1   2  #>  50 100  #> ... #> For complete data, use `as.data.frame(...)`"},{"path":"https://emvolz-phylodynamics.github.io/treestructure/reference/plot.TreeStructure.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot TreeStructure tree with cluster and partition variables — plot.TreeStructure","title":"Plot TreeStructure tree with cluster and partition variables — plot.TreeStructure","text":"Plot TreeStructure tree cluster partition variables","code":""},{"path":"https://emvolz-phylodynamics.github.io/treestructure/reference/plot.TreeStructure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot TreeStructure tree with cluster and partition variables — plot.TreeStructure","text":"","code":"# S3 method for class 'TreeStructure' plot(x, use_ggtree = TRUE, ...)"},{"path":"https://emvolz-phylodynamics.github.io/treestructure/reference/plot.TreeStructure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot TreeStructure tree with cluster and partition variables — plot.TreeStructure","text":"x TreeStructure object use_ggtree Toggle ggtree ape plotting behavior ... Additional arguments passed ggtree ape::plot.phylo","code":""},{"path":"https://emvolz-phylodynamics.github.io/treestructure/reference/plot.TreeStructure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot TreeStructure tree with cluster and partition variables — plot.TreeStructure","text":"","code":"tree <- ape::read.tree( system.file('sim.nwk', package = 'treestructure') )  (struc <- trestruct( tree )) #> Tree has NA or duplicated tip labels. Adding a unique id. #> Finding splits under nodes: 276  #> Finding splits under nodes: 276 526  #> Finding splits under nodes: 276 421  #> Finding splits under nodes: 276 473  #> Call:  #> .trestruct(tre = tre, minCladeSize = minCladeSize, minOverlap = minOverlap,  #>     nodeSupportValues = nodeSupportValues, nodeSupportThreshold = nodeSupportThreshold,  #>     nsim = nsim, level = level[1], ncpu = ncpu, verbosity = verbosity,  #>     debugLevel = debugLevel, useNodeSupport = useNodeSupport,  #>     tredat = tredat) #>  #> Significance level: 0.01  #> Number of clusters: 4  #> Number of partitions: 2  #> Number of taxa in each cluster: #>  #>   1   2   3   4  #>  25  25 200  25  #> Number of taxa in each partition: #>  #>   1   2  #>  75 200  #> ... #> For complete data, use `as.data.frame(...)`   #plot treestructure object  plot(struc)"},{"path":"https://emvolz-phylodynamics.github.io/treestructure/reference/treestructure-package.html","id":null,"dir":"Reference","previous_headings":"","what":"treestructure: Detect Population Structure Within Phylogenetic Trees — treestructure-package","title":"treestructure: Detect Population Structure Within Phylogenetic Trees — treestructure-package","text":"Algorithms detecting population structure history coalescent events recorded phylogenetic trees. method classifies tip internal node tree disjoint sets characterized similar coalescent patterns.","code":""},{"path":"https://emvolz-phylodynamics.github.io/treestructure/reference/treestructure-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"treestructure: Detect Population Structure Within Phylogenetic Trees — treestructure-package","text":"Methods detecting structure phylogenies. Includes *trestruct* function partitioning tree methods printing plotting trees structure. Refer vignettes common usage.","code":""},{"path":"https://emvolz-phylodynamics.github.io/treestructure/reference/treestructure-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"treestructure: Detect Population Structure Within Phylogenetic Trees — treestructure-package","text":"Erik Volz, Wiuf Carsten, Yonatan Grad, Simon Frost, Ann Dennis, Xavier Didelot,    \"Identification hidden population structure time-scaled phylogenies\",    (2020); Systematic Biology, 69: 884–896.","code":""},{"path":[]},{"path":"https://emvolz-phylodynamics.github.io/treestructure/reference/treestructure-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"treestructure: Detect Population Structure Within Phylogenetic Trees — treestructure-package","text":"Maintainer: Erik Volz erik@erikvolz.info (ORCID) contributors: Fabricia F. Nascimento thednainus@yahoo.com (ORCID) [contributor] Vinicius B. Franceschi vinibfranc@gmail.com (ORCID) [contributor]","code":""},{"path":"https://emvolz-phylodynamics.github.io/treestructure/reference/treestructure.test.html","id":null,"dir":"Reference","previous_headings":"","what":"Test treestructure hypothesis — treestructure.test","title":"Test treestructure hypothesis — treestructure.test","text":"Test hypothesis two clades within tree generated coalescent process.","code":""},{"path":"https://emvolz-phylodynamics.github.io/treestructure/reference/treestructure.test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test treestructure hypothesis — treestructure.test","text":"","code":"treestructure.test(tre, x, y, nsim = 10000)"},{"path":"https://emvolz-phylodynamics.github.io/treestructure/reference/treestructure.test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test treestructure hypothesis — treestructure.test","text":"tre ape::phylo tree, must binary rooted x character vector tip labels numeric node numbers. numeric, can include internal node numbers. y x, must disjoint x nsim Number simulations (larger = slower accurate)","code":""},{"path":"https://emvolz-phylodynamics.github.io/treestructure/reference/treestructure.test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test treestructure hypothesis — treestructure.test","text":"","code":"tree <- ape::read.tree( system.file('sim.nwk', package = 'treestructure') )  (struc <- trestruct( tree )) #> Tree has NA or duplicated tip labels. Adding a unique id. #> Finding splits under nodes: 276  #> Finding splits under nodes: 276 526  #> Finding splits under nodes: 276 421  #> Finding splits under nodes: 276 473  #> Call:  #> .trestruct(tre = tre, minCladeSize = minCladeSize, minOverlap = minOverlap,  #>     nodeSupportValues = nodeSupportValues, nodeSupportThreshold = nodeSupportThreshold,  #>     nsim = nsim, level = level[1], ncpu = ncpu, verbosity = verbosity,  #>     debugLevel = debugLevel, useNodeSupport = useNodeSupport,  #>     tredat = tredat) #>  #> Significance level: 0.01  #> Number of clusters: 4  #> Number of partitions: 2  #> Number of taxa in each cluster: #>  #>   1   2   3   4  #>  25  25 200  25  #> Number of taxa in each partition: #>  #>   1   2  #>  75 200  #> ... #> For complete data, use `as.data.frame(...)`   #run the test  results <- treestructure.test(tree, x = struc$clusterSets[[1]],                               y = struc$clusterSets[[2]]) #> Tree has NA or duplicated tip labels. Adding a unique id.  print(results) #>      Treestructure rank-sum test #>       #> data:  #> Phylogenetic tree with 275 tips and 274 internal nodes. #>  #> Tip labels: #>   1_1, 2_1, 3_1, 4_1, 5_1, 6_1, ... #>  #> Rooted; includes branch length(s). #> Rank sum = 638, p-value = 0.1504 #> Alternative hypothesis: Rank sum differs from coalescent distribution #> 95 percent confidence interval: #>   492  682"},{"path":"https://emvolz-phylodynamics.github.io/treestructure/reference/trestruct.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect cryptic population structure in time trees — trestruct","title":"Detect cryptic population structure in time trees — trestruct","text":"Estimates partition time-scaled tree contrasting coalescent patterns.","code":""},{"path":"https://emvolz-phylodynamics.github.io/treestructure/reference/trestruct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect cryptic population structure in time trees — trestruct","text":"","code":"trestruct(   tre,   minCladeSize = 25,   minOverlap = -Inf,   nodeSupportValues = FALSE,   nodeSupportThreshold = 95,   nsim = 10000,   level = 0.01,   ncpu = 1,   verbosity = 1,   debugLevel = 0,   levellb = 0.001,   levelub = 0.1,   res = 11 )"},{"path":"https://emvolz-phylodynamics.github.io/treestructure/reference/trestruct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect cryptic population structure in time trees — trestruct","text":"tre tree type ape::phylo. Must rooted. tree multifurcations, converted binary tree processing. minCladeSize clusters within partition must least many tips. minOverlap Threshold time overlap required find splits clade. nodeSupportValues Node support values produced bootstrap Bayesian credibility scores. Must logical vector length equal number internal nodes tree. nodeSupportValues = TRUE, function get information node support tree. numeric vector, values 0 100. nodeSupportThreshold Threshold node support value 0 100. Nodes support lower threshold tested. nsim Number simulations computing null distribution test statistics. level Significance level finding new split within set tips. Can also NULL, case optimal level found according CH index (see details). ncpu > 1 compute statistics parallel using multiple CPUs. verbosity > 0 print information progress algorithm. debugLevel > 0 produce additional data return value. levellb optimizing `level` parameter, lower bound search. levelub optimizing `level` parameter, upper bound search. res optimizing `level` parameter, number values test.","code":""},{"path":"https://emvolz-phylodynamics.github.io/treestructure/reference/trestruct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect cryptic population structure in time trees — trestruct","text":"TreeStructure object includes cluster partition assignment    tip tree.","code":""},{"path":"https://emvolz-phylodynamics.github.io/treestructure/reference/trestruct.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Detect cryptic population structure in time trees — trestruct","text":"Estimates partition time-scaled tree contrasting coalescent patterns. algorithm premised Kingman coalescent null hypothesis ordering node heights contrasting two clades, test statistic formulated based rank sum node times tree. node support values available (computed bootstrap procedures), method can optionally exclude designation structure poorly supported nodes. method designate structure nodes zero branch length relative immediate ancestor. significance level detecting significant partitions tree can provided, range values can examined. CH index based within- -cluster variance node heights can used select significance level none provided.","code":""},{"path":"https://emvolz-phylodynamics.github.io/treestructure/reference/trestruct.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Detect cryptic population structure in time trees — trestruct","text":"Volz EM, Carsten W, Grad YH, Frost SDW, Dennis , Didelot X. Identification hidden population structure time-scaled phylogenies. Systematic Biology 2020; 69(5):884-896.","code":""},{"path":"https://emvolz-phylodynamics.github.io/treestructure/reference/trestruct.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Detect cryptic population structure in time trees — trestruct","text":"Erik M Volz","code":""},{"path":"https://emvolz-phylodynamics.github.io/treestructure/reference/trestruct.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect cryptic population structure in time trees — trestruct","text":"","code":"tree <- ape::rcoal(50) struct <-  trestruct( tree ) #> Finding splits under nodes: 51  print(struct) #> Call:  #> .trestruct(tre = tre, minCladeSize = minCladeSize, minOverlap = minOverlap,  #>     nodeSupportValues = nodeSupportValues, nodeSupportThreshold = nodeSupportThreshold,  #>     nsim = nsim, level = level[1], ncpu = ncpu, verbosity = verbosity,  #>     debugLevel = debugLevel, useNodeSupport = useNodeSupport,  #>     tredat = tredat) #>  #> Significance level: 0.01  #> Number of clusters: 1  #> Number of partitions: 1  #> Number of taxa in each cluster: #>  #>  1  #> 50  #> Number of taxa in each partition: #>  #>  1  #> 50  #> ... #> For complete data, use `as.data.frame(...)`"}]
